 In the first episode we will be talking about what cloud computing is, but also what is the most important vocabulary that you should understand when working with cloud in general. It both describes what cloud computing is, but also what are its benefits. Stay tuned! Let's look at the objectives of the first episode. Today we will learn what cloud computing is, but also what are its benefits by learning the most important vocabulary like high availability, scalability, elasticity, agility, fault tolerance and also disaster recovery. Let's start with cloud computing. Cloud computing is a delivery model for services, services like storage services. Because whenever you are storing your unstructured or structured data in files and databases, cloud delivers you dozens of services to do so. You pretty much can choose any technology that is popular in the market and you will be able to use it within your Azure environment. In this case, storage doesn't only mean storing data, but also all the services and tools that allow you to migrate your data to the cloud. Once your data is in the cloud, you will need compute-powered resources like Windows virtual machines, maybe Linux ones, web containers or any of the hundreds of services available in the cloud. Because cloud is about creating applications, whenever those are web, AI, machine learning, anything, any kind of applications out there. Additionally, once you have your components, you need to be able to somehow connect them to each other securely. So cloud delivers you with set functionalities to create secure networking between those components but also your company. And because your entire platform is managed in the cloud, cloud also needs to deliver you with analytic capabilities so you can review your performance and telemetry data for your services so you can perform operations. The list of the services delivered by cloud computing is much longer than this, but those are the four main ones and four that are tested by the exam. All of those services of course are delivered over the internet and this is basically what cloud is. But delivering services like this doesn't make cloud computing yet. Cloud computing needs to also fulfill certain characteristics. The first characteristic that we will learn today is scalability. Imagine you have a resource. Cloud resource can be anything, it can be a web application, it can be a database, it can be a virtual machine. Cloud gives you a way to scale up this virtual machine by increasing its size. Increasing size of the resource basically means adding more power, like CPU, memory or maybe faster storage. In this case, we are moving along the vertical line, that's why this is called vertical scaling and increasing the size of the resource is called scaling up. If you decrease the size, decrease the power of the machine, this is called scaling down. But besides changing the size of your resource, changing the power of that resource, you can also scale by adding more resources to your environment, so increasing the amount of the resources themselves. In this case, we are moving along the horizontal line, that's why this is called horizontal scaling. If you increase the amount of your resources, this is called scaling out. If you decrease the amount of resources, this is called scaling in. So to summarize, scalability is an ability of the system to scale, in this case scaling is a process of adding or removing resources. Remember that in this case resources might both mean the virtual resources like CPU, memory, but also a specific instance of the resources. For our next term, we have elasticity. One of the best ways to explain elasticity is to show the user workload of the typical application during the day, where the user workload changes as the day progresses. If you design a system like this, you need to assign the specific amount of resources to be able to handle the workload. Properly designed system will be able to allocate and deallocate resources whenever needed. If this process is done automatically, we are talking about automatic scaling. And automatic scaling is basically what elasticity is. To summarize, elasticity is the ability of the system to scale dynamically. Our next term is agility. In the cloud there are two ways to provision resources, either manually via portal or in automated ways using APIs and scripting. But regardless of what choice do you make, in both cases, there is a time between the request is submitted and the response that the request has been fulfilled. And the major difference between the cloud and on-premises is that requesting resources in on-premises environment usually takes days, weeks or even months. In cloud, once you request the resource, you will most likely get it within seconds or minutes and for very few, very big services this might take few hours. But still, this is a major difference between the on-premise environments. In this case, when we say agility, we mean the ability to react quickly. And in the cloud, this means being able to allocate and deallocate your resources in very short time. The next term on our list is so-called fault tolerance. As a user, you purchase services from the cloud, whenever that's web application, virtual machine or SQL. But regardless of the service that you choose or the interface that you use that service with, all those services need to run on some sort of servers in a data centers, storing their data on disk arrays. Whenever there's any service or component failures on those servers, you're automatically moved to another. And same goes for disk arrays, your data is automatically stored on multiple disk and multiple disk arrays to ensure no data is lost. Fault tolerance in this case talks about the ability of the system to remain up and running during component and service failures. So those localized failures will not interrupt your service, most of the time in the cloud, all the services have built-in fault tolerance. That means if you use cloud services, you will not notice those localized failures affecting your system at all. Besides those localized failures, an event of much greater scale might happen. An event like this is called disaster. Disaster is a serious disruption of entire service caused by natural or human-induced causes. The scenarios of this level that we talk about are typically like floods, earthquakes, thunderstorms, power grid failures or just human errors, but they can affect entire Azure region or entire Azure service from working properly. In this case, what you need to do is set up disaster recovery. Disaster recovery simply means creating two copies of the same application into Azure regions and then setting up replication between them, so that you have two identical copies of your application. Then in front of those applications, you need to set up a simple DNS routing, so that your users are automatically redirected to the working version of your application. If any service fails, they will automatically get redirected to your replicated version of your application. So disaster recovery is system's ability to recover from event that has taken down entire region or service. So simply said, it's a way for your system to work properly after a disaster. And our last term for today is so-called high availability. Availability is a simple metric that measures how much uptime of the system, so the system being accessible to users or other systems, versus how much downtime this system had. In this case, downtime means planned occurrences like system downtime for patching or unplanned so system failures. And availability is a simple calculation between the uptime and entire lifetime of the system. And depending on what you agree with your client, you calculate availability per year, month or day. Choosing this metric is very important, because 99% availability means only 3 days of downtime per year. If you go for 3 nines, that's only 8 hours, almost 9 hours per year of downtime. But most companies targeting high availability, they go for at least 4 nines, which means 52 minutes per year. With so restrictive uptime requirements, you will need specific tools and specific design in order to achieve high availability. But in this case, to summarize, availability is a measure of system uptime for either users or services. And high availability basically means ability of the system to run for very extended periods of time with very little downtime. Two things that I want to mention here is that one, depending on the criticality of your system, you need to choose whenever this system should be highly available or not. But luckily for us, in Azure, many services deliver very high availability by default. So just check what they offer and decide if this service is right for you. Next steps after watching this episode, go to my website to marchag.io az900 hashtag episode01 and check out the materials that I prepared for you. Actually check out the cheat sheet and practice test to test your knowledge. And that's it for this episode. Thank you guys for watching. If you like what I do, support the channel by subscribing, liking and commenting or sharing this to your friends. If you want to see the next episode, simply follow the playlist or hit the icon on the side and see you there.